#!/usr/bin/env ruby
require_relative '../lib/art'

require 'optparse'

options = {}
opt_parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{$0} [OPTIONS]..."

  opts.on( '-t', '--test', 'run example command' ) do
    sample_args = "move_to , 5,5; ride_to, 40"
    options[:commands] = sample_args
    puts "#{$0} -c #{sample_args}"
    sleep 3
  end

  opts.on( "--commands [COMMANDS]", "specify methods to run") do |c|
    options[:commands] = c
  end

  opts.on_tail( '-h', '--help', 'This help screen' ) do
    puts opts
    exit
  end
end
opt_parser.parse!

# command_array = options[:commands].split(/;/)
command_string = options[ :commands ]
command_ary = command_string.split( /\s*;\s*/ )
command_arguments = command_ary.map{ |command_arg_str| command_arg_str.split(/\s*,\s*/) }


#puts "commands: #{ command_string }..."
#puts "command_args: #{command_arguments.inspect}"
art = Art.new
command_arguments.each do |cmd_args_ary|
  cmd = cmd_args_ary.shift
  args = cmd_args_ary
  #puts "cmd: #{cmd.inspect}, *args: #{args.inspect}..."
  commands = lambda { |a| a.send( cmd, *args ) }
  art.live( &commands )
end
